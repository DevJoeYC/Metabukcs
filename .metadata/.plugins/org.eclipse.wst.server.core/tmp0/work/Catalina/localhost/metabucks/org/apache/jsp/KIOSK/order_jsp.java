/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-05-27 06:34:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.KIOSK;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import meta.dto.*;
import meta.vo.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public final class order_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/KIOSK/db/dbopen.jsp", Long.valueOf(1653310126397L));
    _jspx_dependants.put("/KIOSK/includes/tail.jsp", Long.valueOf(1653310126486L));
    _jspx_dependants.put("/KIOSK/includes/head.jsp", Long.valueOf(1653633056075L));
    _jspx_dependants.put("/KIOSK/db/dbclose.jsp", Long.valueOf(1653310126396L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("meta.dto");
    _jspx_imports_packages.add("meta.vo");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.Connection");
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("java.sql.Statement");
    _jspx_imports_classes.add("java.sql.DriverManager");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");

	//session.setMaxInactiveInterval(60*1); //1분후 세션만료(아무 움직임 없을시)
	String id = "";
	accountVO user  = (accountVO) session.getAttribute("accountVO");
	if(user != null)
	{
		id = user.id();
	}

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		\r\n");
      out.write("		<title>메타벅스</title>\r\n");
      out.write("		<link rel=\"stylesheet\" href=\"css/kiosk.css\"/>\r\n");
      out.write("		<script src=\"js/jquery-3.6.0.js\"></script>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>\r\n");
      out.write("		<table border=0  style=\"width:100%;\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td id=\"bar\" colspan=\"2\" style=\"text-align:left;padding:0px 0px 30px 0px; font-size:4rem;\">\r\n");
      out.write("					<a style=\"color: white;text-decoration:none;\" href=\"index.jsp\">\r\n");
      out.write("					<img src=\"images/CoffeeLogo.png\" height=\"80px\" width=\"100px\">\r\n");
      out.write("					HOME &nbsp;\r\n");
      out.write("					</a>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td id=\"bar\" colspan=\"2\" style=\"text-align:right; width:100px; height:30px; font-size: 3rem; padding:0px 20px 30px 0px\">\r\n");
      out.write("					");

						if(id == null || id.equals(""))
						{
							
      out.write("\r\n");
      out.write("								안녕하세요\r\n");
      out.write("							");

						}else
						{
							
      out.write("\r\n");
      out.write("							[");
      out.print( user.name() );
      out.write("]님 환영합니다 &nbsp;&nbsp;&nbsp;<a id=\"mypagebtn\" href=\"mypage.jsp\">마이페이지</a></td>\r\n");
      out.write("							");

						}	
					
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td id=\"bar\"  height=\"130px\" width=\"100px\" style=\"text-align:center\">\r\n");
      out.write("					<a id=\"menu\" style=\"color: white\" href=\"drinkmenu.jsp\">음료</a>\r\n");
      out.write("				</td>\r\n");
      out.write("				<td id=\"bar\" width=\"130px\" style=\"text-align:center\">\r\n");
      out.write("					<a id=\"menu\" style=\"color: white\" href=\"sidemenu.jsp\">사이드 메뉴</a>\r\n");
      out.write("					</td>\r\n");
      out.write("			</tr>");
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");

	Class.forName("com.mysql.cj.jdbc.Driver");
	
	String host   = "jdbc:mysql://silverwoods.synology.me:3306/CTEAM";
	host += "?useUnicode=true&characterEncoding=utf-8";
	host += "&serverTimezone=UTC";
	String userid = "CTEAM";
	String passwd = "E2en_java_(team";
	Connection conn = null;
	
	//데이터베이스에 연결
	conn = DriverManager.getConnection(host,userid,passwd);
	
	//작업 처리용 클래스를 할당 받는다.
	Statement stmt = conn.createStatement();

      out.write('\r');
      out.write('\n');

	String str = "";
	ArrayList<String> list = new ArrayList<String>();
	
	int MAX			   = (Integer) session.getAttribute("sel_count");		//총갯수	
	int menucount	   = (Integer) session.getAttribute("menucount");		//메뉴당 갯수
	int sel_price	   = (Integer) session.getAttribute("sel_price");		//총액
	
	System.out.println("sel_count"+MAX);
	System.out.println("menucount"+menucount);
	System.out.println("sel_price"+sel_price);
	System.out.println("sel_menu_"+0);
	
	for( int i = 0 ; i < MAX ; i++)
	{
		str = "sel_menu_" + i ;
		System.out.println(i);
		System.out.println(str);
		String tmp = (String) session.getAttribute(str);
		list.add(tmp);
		System.out.println(list.get(i));
	}

      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//pID : 객체 ID\r\n");
      out.write("//pMode : + 또는 -\r\n");
      out.write("function SetItem(obj,pMode,pMax)\r\n");
      out.write("{\r\n");
      out.write("	var subObj = null;\r\n");
      out.write("	var num  = 0;\r\n");
      out.write("	\r\n");
      out.write("	if( pMode == \"+\" )\r\n");
      out.write("	{\r\n");
      out.write("		subObj = $(obj).prev();\r\n");
      out.write("		stat = $(subObj).text();\r\n");
      out.write("		num = parseInt(stat);\r\n");
      out.write("		num++;\r\n");
      out.write("		if( num > pMax )\r\n");
      out.write("		{\r\n");
      out.write("			//alert(\"더 이상 늘일 수 없습니다.\");\r\n");
      out.write("			num = pMax;\r\n");
      out.write("		}\r\n");
      out.write("	}else if( pMode == \"-\")\r\n");
      out.write("	{\r\n");
      out.write("		subObj = $(obj).next();\r\n");
      out.write("		stat = $(subObj).text();\r\n");
      out.write("		num = parseInt(stat);			\r\n");
      out.write("		num--;\r\n");
      out.write("		if( num < pMax )\r\n");
      out.write("		{\r\n");
      out.write("			//alert(\"더 이상 줄일 수 없습니다.\");\r\n");
      out.write("			num = pMax;\r\n");
      out.write("		}			\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	$(subObj).text(num+\"개\");\r\n");
      out.write("	\r\n");
      out.write("	var price = $(obj).parent().next().find(\".price\").val();\r\n");
      out.write("	price = parseInt(price.replace(/,/g , ''));\r\n");
      out.write("\r\n");
      out.write("	//합계 금액을 계산한다.\r\n");
      out.write("	var drinkcount = $(obj).parent().find(\".drinkcount\").text();\r\n");
      out.write("	drinkcount = parseInt(drinkcount);\r\n");
      out.write("	var sum_price = 0;\r\n");
      out.write("	sum_price = drinkcount * price;\r\n");
      out.write("	$(obj).parent().next().find(\".sum_price\").text(makeComma(sum_price)+\"원\");\r\n");
      out.write("	\r\n");
      out.write("	MakeTotal();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//전체 메뉴갯수, 금액 변경\r\n");
      out.write("function MakeTotal()\r\n");
      out.write("{\r\n");
      out.write("	var total_count	= 0;\r\n");
      out.write("	var finalprice	= 0;\r\n");
      out.write("	var total		= 0;\r\n");
      out.write("	\r\n");
      out.write("	var list = $(\".itemlist .items\").each(function(){\r\n");
      out.write("		total_count	+= parseInt($(this).find(\".drinkcount\").text());\r\n");
      out.write("		total		+= parseInt($(this).find(\".sum_price\").text().replace(\",\",\"\"));\r\n");
      out.write("	});\r\n");
      out.write("	document.getElementById(\"total\").innerText=makeComma(total);\r\n");
      out.write("	document.getElementById(\"finalprice\").innerText=makeComma(total);\r\n");
      out.write("	document.getElementById(\"total_count\").innerText=total_count;\r\n");
      out.write("}\r\n");
      out.write("//포인트 사용\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("  $(\"#usepoint\").change(function(){\r\n");
      out.write("  	\r\n");
      out.write("  	var finalprice = document.getElementById(\"finalprice\").innerText;\r\n");
      out.write("		finalprice = parseInt(finalprice.replace(\",\",\"\"));\r\n");
      out.write("		var point = document.getElementById(\"point\").innerText;\r\n");
      out.write("		point = parseInt(point.replace(\",\",\"\"));\r\n");
      out.write("		\r\n");
      out.write("      if($(\"#usepoint\").is(\":checked\"))\r\n");
      out.write("      {\r\n");
      out.write("			finalprice = finalprice - point;\r\n");
      out.write("			document.getElementById(\"finalprice\").innerText=makeComma(finalprice);\r\n");
      out.write("      }else \r\n");
      out.write("      {\r\n");
      out.write("			finalprice = finalprice + point;\r\n");
      out.write("			document.getElementById(\"finalprice\").innerText=makeComma(finalprice);\r\n");
      out.write("      }\r\n");
      out.write("  });\r\n");
      out.write("});\r\n");
      out.write("//콤마 추가하기\r\n");
      out.write("function makeComma(num)\r\n");
      out.write("{\r\n");
      out.write("	return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n");
      out.write("}\r\n");
      out.write("$(function(){\r\n");
      out.write("	var num = $(\"#finalprice\"). text()\r\n");
      out.write("	num2 = $.numberWithCommas(parseInt(num));\r\n");
      out.write("	$(\"#finalprice\").text(num2);\r\n");
      out.write("	\r\n");
      out.write("	var num = $(\"#total\"). text()\r\n");
      out.write("	num2 = $.numberWithCommas(parseInt(num));\r\n");
      out.write("	$(\"#total\").text(num2);\r\n");
      out.write("	\r\n");
      out.write("	var num = $(\"#deposit\"). text()\r\n");
      out.write("	num2 = $.numberWithCommas(parseInt(num));\r\n");
      out.write("	$(\"#deposit\").text(num2);\r\n");
      out.write("	\r\n");
      out.write("	var num = $(\"#point\"). text()\r\n");
      out.write("	num2 = $.numberWithCommas(parseInt(num));\r\n");
      out.write("	$(\"#point\").text(num2);\r\n");
      out.write("})\r\n");
      out.write("\r\n");
      out.write("$.numberWithCommas = function (x) {\r\n");
      out.write("	  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("function Order()\r\n");
      out.write("{\r\n");
      out.write("	//alert(\"a\");\r\n");
      out.write("	var datalist = \"\";\r\n");
      out.write("\r\n");
      out.write("	var optionlist = $(\".optionlist\").parent().find(\".optionlist\").text();\r\n");
      out.write("	if(datalist != \"\") datalist += \"/\";\r\n");
      out.write("	datalist += optionlist;	\r\n");
      out.write("\r\n");
      out.write("	var drinkcount =  $(\".drinkcount\").parent().find(\".drinkcount\").text();\r\n");
      out.write("	if(datalist != \"\") datalist += \"/\";\r\n");
      out.write("	datalist += drinkcount;		\r\n");
      out.write("	\r\n");
      out.write("	var sum_price = $(\".sum_price\").parent().find(\".sum_price\").text();\r\n");
      out.write("	if(datalist != \"\") datalist += \"/\";\r\n");
      out.write("	datalist += sum_price;	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	$(\".total\").each(\r\n");
      out.write("			function()\r\n");
      out.write("			{\r\n");
      out.write("				var total = document.getElementById(\"total\").innerText;\r\n");
      out.write("				if(datalist != \"\") datalist += \"/\";\r\n");
      out.write("				datalist += total;			\r\n");
      out.write("			}\r\n");
      out.write("		);\r\n");
      out.write("	$(\".finalprice\").each(\r\n");
      out.write("		function()\r\n");
      out.write("		{\r\n");
      out.write("			var finalprice = document.getElementById(\"finalprice\").innerText;\r\n");
      out.write("			if(datalist != \"\") datalist += \"/\";\r\n");
      out.write("			datalist += finalprice;			\r\n");
      out.write("		}\r\n");
      out.write("	);\r\n");
      out.write("	$(\".deposit\").each(\r\n");
      out.write("		function()\r\n");
      out.write("		{\r\n");
      out.write("			var deposit = document.getElementById(\"deposit\").innerText;\r\n");
      out.write("			if(datalist != \"\") datalist += \"/\";\r\n");
      out.write("			datalist += deposit;									\r\n");
      out.write("		}\r\n");
      out.write("	);\r\n");
      out.write("	$(\".point\").each(\r\n");
      out.write("		function()\r\n");
      out.write("		{\r\n");
      out.write("			var point = document.getElementById(\"point\").innerText;\r\n");
      out.write("			if(datalist != \"\") datalist += \"/\";\r\n");
      out.write("			datalist += point;				\r\n");
      out.write("		}\r\n");
      out.write("	);\r\n");
      out.write("	\r\n");
      out.write("	//alert(datalist);\r\n");
      out.write("	$(\"#order\").val(datalist);\r\n");
      out.write("	$(\"#order_tocard\").val(datalist);\r\n");
      out.write("	");

	if(id == null || id.equals(""))
	{
		
      out.write("\r\n");
      out.write("		document.orderform_tocard.submit();\r\n");
      out.write("		");

	}else
	{
		
      out.write("\r\n");
      out.write("		Check();\r\n");
      out.write("		");

	}	
	
      out.write("\r\n");
      out.write("}\r\n");
      out.write("//잔액체크\r\n");
      out.write("function Check()\r\n");
      out.write("{	\r\n");
      out.write("	var deposit	   = document.getElementById(\"deposit\").innerText;\r\n");
      out.write("	deposit = parseInt(deposit.replace(\",\",\"\"));\r\n");
      out.write("	//alert(deposit);\r\n");
      out.write("	var finalprice = document.getElementById(\"finalprice\").innerText;\r\n");
      out.write("	finalprice = parseInt(finalprice.replace(\",\",\"\"));\r\n");
      out.write("	//alert(finalprice);\r\n");
      out.write("	if(deposit < finalprice)\r\n");
      out.write("	{\r\n");
      out.write("		alert(\"잔액이 부족합니다. 카드결제를 이용해주세요.\");\r\n");
      out.write("		document.orderform_tocard.submit();\r\n");
      out.write("	}else if(deposit > finalprice)\r\n");
      out.write("	{\r\n");
      out.write("		document.orderform.submit();\r\n");
      out.write("	}else\r\n");
      out.write("	{\r\n");
      out.write("		//alert(\"a\");\r\n");
      out.write("		document.orderform_tocard.submit();\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("<!-- ==================================================================================================================== -->\r\n");
      out.write("<tr>\r\n");
      out.write("	<td colspan=\"5\" style=\"background-color:white;text-align:center;padding:150px 0px 150px 0px\"><h1>주문확인</h1>\r\n");
      out.write("	<form id=\"orderform\" name=\"orderform\" method=\"post\" action=\"receipt.jsp\">\r\n");
      out.write("		<input type=\"hidden\" name=\"order\" id=\"order\" value=\"\">\r\n");
      out.write("		<table id=\"login\" border=\"0\" height=\"900\" width=\"900\" style=\"margin : auto; text-align:center\">\r\n");
      out.write("			<tr height=\"400\">\r\n");
      out.write("				<td colspan=\"2\">\r\n");
      out.write("					<table border=0 width=\"80%\" height=\"80%\" style=\"margin : auto; text-align:center; font-size: 2rem;\" class=\"itemlist\">\r\n");
      out.write("						<tr height=\"5px\">\r\n");
      out.write("							<td>제품</td>\r\n");
      out.write("							<td>수량</td>\r\n");
      out.write("							<td>금액</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						");

							if(MAX <= 0) out.println("선택한 상품이 없습니다");
						
							else
							{
								for(int i=0; i < MAX; i++) 
								{									
									String[] items = list.get(i).split("/");
									
      out.write("\r\n");
      out.write(" 									<tr height=\"10\" class=\"items\">\r\n");
      out.write("										<td height=\"10px\" class=\"optionlist\"  id=\"optionlist\">\r\n");
      out.write("											<input type=\"hidden\" id=\"pro_no\" name=\"pro_no\" id=\"pro_no\" value=\"");
      out.print(items[0]);
      out.write("\">\r\n");
      out.write("											<b>");
      out.print( items[1] );
      out.write(' ');
      out.write(':');
      out.write(' ');
      out.print( items[2] );
      out.write(" </b><br>샷:");
      out.print( items[3] );
      out.write(":시럽:");
      out.print( items[4] );
      out.write(",\r\n");
      out.write("										</td>\r\n");
      out.write("										\r\n");
      out.write("										<td>\r\n");
      out.write("											<input type=\"button\" class=\"minus\" value=\"-\" onclick=\"SetItem(this,'-',0)\">\r\n");
      out.write("											<span class=\"drinkcount\" id=\"drinkcount\" style=\"display:inline-block; width:100px\">");
      out.print( items[5] );
      out.write("개</span>\r\n");
      out.write("											<input type=\"button\" class=\"plus\" value=\"+\" onclick=\"SetItem(this,'+',30)\">\r\n");
      out.write("											\r\n");
      out.write("										</td>\r\n");
      out.write("										<td>\r\n");
      out.write("											<input type=\"hidden\" class=\"price\" id=\"price\" name=\"price\" value=\"");
      out.print( items[7] );
      out.write("\">\r\n");
      out.write("											<span class=\"sum_price\" id=\"sum_price");
      out.print( i );
      out.write('"');
      out.write('>');
      out.print( items[6] );
      out.write("원</span>\r\n");
      out.write("										</td>\r\n");
      out.write("									</tr>\r\n");
      out.write("								");

								}
							}
						
      out.write("\r\n");
      out.write("					</table>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr><td colspan=2>-------------------------------------------------------------------------------------------</td></tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td> <h2>총 금액</h2></td>\r\n");
      out.write("				<td> \r\n");
      out.write("					<h4><span id=\"total\" class=\"total\">");
      out.print( sel_price );
      out.write("</span>원</h4>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("				");

					if(id == null || id.equals(""))
					{
						
      out.write("\r\n");
      out.write("							<tr><td colspan=2>-------------------------------------------------------------------------------------------</td></tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td><h2>총 수량</h2></td>\r\n");
      out.write("								<td>\r\n");
      out.write("									<h2><span id=\"total_count\" class=\"total_count\">");
      out.print( menucount );
      out.write("</span>개</h2>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td><h2>결제 금액</h2></td>\r\n");
      out.write("								<td>\r\n");
      out.write("									<h2><span id=\"finalprice\" class=\"finalprice\">");
      out.print( sel_price );
      out.write("</span>원</h2>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td width=\"350px\">\r\n");
      out.write("									<span><a id=\"yes\" onclick=\"Order();\" >결제하기</a></span>\r\n");
      out.write("								</td>\r\n");
      out.write("								<td><span><a id=\"no\" href=\"drinkmenu.jsp\">취소</a></span></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("						");

					}else
					{
						String sql = "";
						sql  = " select ";
						sql += " deposit, ";
						sql += " point, ";
						sql += " pay_method ";
						sql += " from account ";
						sql += " where fno = '"+user.fno()+"' ";
						ResultSet result = stmt.executeQuery(sql);
						
						while(result.next() == true)
						{
							String deposit     = result.getString("deposit");
							String point       = result.getString("point");
							String pay_method  = result.getString("pay_method");
							
      out.write("\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td style=\"font-size:1.5rem;\"> 예치금 잔액</td>\r\n");
      out.write("								<td style=\"font-size:1.5rem;\"><span id=\"deposit\" class=\"deposit\">");
      out.print(deposit );
      out.write("</span>원</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td style=\"font-size:1.5rem;\"> 현재 적립금</td>\r\n");
      out.write("								<td style=\"font-size:1.5rem;\"><span id=\"point\" class=\"point\">");
      out.print(point );
      out.write("</span> 포인트 <input type=\"checkbox\" name=\"usepoint\" id=\"usepoint\">사용하기</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr><td colspan=2>-------------------------------------------------------------------------------------------</td></tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td><h2>총 수량</h2></td>\r\n");
      out.write("								<td><h2><span id=\"total_count\" class=\"total_count\">");
      out.print( menucount );
      out.write("</span>개</h2></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td><h2>결제 금액</h2></td>\r\n");
      out.write("								\r\n");
      out.write("								<td><h2><span id=\"finalprice\" class=\"finalprice\">");
      out.print( sel_price );
      out.write("</span>원</h2></td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							<tr>\r\n");
      out.write("								<td>\r\n");
      out.write("									<span><a id=\"yes\" onclick=\"Order();\" >결제하기</a></span>\r\n");
      out.write("								</td>\r\n");
      out.write("								<td>\r\n");
      out.write("									<span><a id=\"no\" href=\"drinkmenu.jsp\">취소</a></span>\r\n");
      out.write("								</td>\r\n");
      out.write("							</tr>\r\n");
      out.write("							");

						}	
					}	
				
      out.write("\r\n");
      out.write("		</table>\r\n");
      out.write("		</form>\r\n");
      out.write("		<form id=\"orderform_tocard\" name=\"orderform_tocard\" method=\"post\" action=\"card.jsp\">\r\n");
      out.write("			<input type=\"hidden\" name=\"order_tocard\" id=\"order_tocard\" value=\"\">\r\n");
      out.write("		</form>\r\n");
      out.write("	</td>\r\n");
      out.write("<!-- ==================================================================================================================== -->\r\n");
      out.write("\r\n");
      out.write("</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</body>\r\n");
      out.write("	</html>");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');

	//작업 처리용 클래스를 닫는다.
	stmt.close();
	
	//데이터베이스 연결을 종료한다.
	conn.close();

      out.write('\r');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
