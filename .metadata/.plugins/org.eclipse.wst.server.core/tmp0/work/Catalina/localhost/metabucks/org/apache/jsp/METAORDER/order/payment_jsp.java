/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-05-27 03:46:18 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.METAORDER.order;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import meta.vo.*;
import meta.dto.*;

public final class payment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("meta.vo");
    _jspx_imports_packages.add("meta.dto");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("   \r\n");
      out.write("    \r\n");


request.setCharacterEncoding("UTF-8");
//orderok 에서 선택된 음료 주문에 대한 값을 받아옴
String select_item	= request.getParameter("select_item");
String sel_option	= request.getParameter("sel_option");
String total_price	= request.getParameter("total_price");

//값이 없거나 다를때 
if( select_item == null || select_item.equals("")|| sel_option==null || sel_option.equals("") || total_price==null || total_price.equals(""))
{
	response.sendRedirect("index.jsp");
	return;
}
/*
out.print(sel_option + "<br>");
out.print(total_price + "<br>");
out.print(select_item + "<br>");
*/

//샷, 시럽, 음료개수
String [] option = sel_option.split(",");

//out.print("shot = " + option[0] +" syrup = " + option[1]+ " 음료개수 = "+ option[2] + "<br>"); 

//사이즈, 이름, 기본가격
String [] item = select_item.split("@");
//out.println("size = " + menu[0] + " name = " + menu[1] + " 기본가격 = " + menu[2] );

String size		=	item[0] ;
String name		=	item[1];
String price	=	item[2];
String no		=	item[3];
String shot		=	option[0];
String syrup	=	option[1];
String count	=	option[2];

int pro_no = Integer.parseInt(no);
productsDTO	pdto = new productsDTO();
productsVO	pro = null;
pro = pdto.GetItem(pro_no);

//넘어온 총 주문정보
String payInfo	=	size + "@" + name + "@" + price + "@" + shot + "@" + syrup + "@" + count + "@" + total_price + "@" + no;



      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("	<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>메타벅스</title>\r\n");
      out.write("		<link type=\"text/css\" rel=\"stylesheet\" href=\"../css/all.css\">\r\n");
      out.write("		<script src=\"../js/jquery-3.6.0.js\"></script>\r\n");
      out.write("	</head>\r\n");
      out.write("	<script>\r\n");
      out.write("		function DoPayMent()\r\n");
      out.write("		{\r\n");
      out.write("			\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				type : \"post\",\r\n");
      out.write("				url: \"paymentok.jsp\",\r\n");
      out.write("				dataType: \"html\",\r\n");
      out.write("				data: \r\n");
      out.write("				{\r\n");
      out.write("					payInfo:$(\"#payInfo\").val(),\r\n");
      out.write("					selPay:$(\"#selPay\").val()\r\n");
      out.write("			    },	\r\n");
      out.write("				success : function(data) \r\n");
      out.write("				{\r\n");
      out.write("					data = data.trim();\r\n");
      out.write("					if(data == data)\r\n");
      out.write("					{\r\n");
      out.write("			            // Contents 영역 교체\r\n");
      out.write("			            $('#contents').html(data);\r\n");
      out.write("					}else\r\n");
      out.write("					{\r\n");
      out.write("						alert (data);\r\n");
      out.write("					}\r\n");
      out.write("				}\r\n");
      out.write("			});	\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<body>\r\n");
      out.write("		<div id=\"contents\" >\r\n");
      out.write("		<table border=\"0\" align=center width=500px>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td>\r\n");
      out.write("				<a href=\"orderok.jsp\"><img src=\"../img/back.png\"></a>\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("			<tr style=\"height:100px;\">\r\n");
      out.write("				<td colspan=\"4\">\r\n");
      out.write("					<h2>\r\n");
      out.write("						결제하기\r\n");
      out.write("					</h2>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td width=\"125px\">\r\n");
      out.write("					<h3>결제수단</h3>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td width=\"125px\">\r\n");
      out.write("					<select name=\"selPay\" id=\"selPay\">\r\n");
      out.write("						<option value=\"card\">신용카드</option>\r\n");
      out.write("						<option value=\"deposit\">예치금</option>\r\n");
      out.write("						<option value=\"point\">적립금</option>\r\n");
      out.write("					</select>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"width:125px; height:80px\">\r\n");
      out.write("					<h3>주문내역</h3>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td style=\"width:125px; height:80px \" rowspan=\"5\" >\r\n");
      out.write("					<img width=\"125px\" src=\"download.jsp?file=");
      out.print( pro.images().get(0).img_pname() );
      out.write("&name=");
      out.print( pro.images().get(0).img_lname() );
      out.write("\">\r\n");
      out.write("				</td>\r\n");
      out.write("				<td id=\"name\"colspan=\"3\" >\r\n");
      out.write("					");
      out.print( name );
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				<td id=\"price\" align=right>\r\n");
      out.write("					");
      out.print( price );
      out.write("원\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"3\">\r\n");
      out.write("					수량\r\n");
      out.write("				</td>\r\n");
      out.write("				<td  id=\"count\" align=right>\r\n");
      out.write("					");
      out.print( count );
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"3\" >\r\n");
      out.write("					사이즈 \r\n");
      out.write("				</td>\r\n");
      out.write("				<td id=\"size\" align=right>\r\n");
      out.write("					");
      out.print( size );
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td id=\"shot\" colspan=\"3\" >\r\n");
      out.write("					샷 \r\n");
      out.write("				</td>\r\n");
      out.write("				<td align=right>\r\n");
      out.write("					");
      out.print( shot );
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td id=\"syrup\" colspan=\"3\" >\r\n");
      out.write("					시럽 \r\n");
      out.write("				</td>\r\n");
      out.write("				<td colspan=\"2\" align=right>\r\n");
      out.write("					");
      out.print( syrup );
      out.write("\r\n");
      out.write("				</td>\r\n");
      out.write("				  \r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"hidden\" id=\"payInfo\" id=\"payInfo\" value=\"");
      out.print( payInfo );
      out.write("\">\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr style=\"overflow: hidden;position: fixed;\r\n");
      out.write("						background-color: white; /*임의색상*/\r\n");
      out.write("						bottom: 0;\r\n");
      out.write("						height: 12rem;\">\r\n");
      out.write("							<td width=112px align=center>\r\n");
      out.write("								최종 결제 금액\r\n");
      out.write("							</td>\r\n");
      out.write("							<td id=\"total_price\" width=380px align=right>\r\n");
      out.write("								");
      out.print( total_price );
      out.write(" 원\r\n");
      out.write("							</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr style=\"position: fixed;\r\n");
      out.write("						background-color: white; /*임의색상*/\r\n");
      out.write("						bottom: 0;\r\n");
      out.write("						height: 6rem;\">\r\n");
      out.write("				<td width=500px align=center>\r\n");
      out.write("					<a class=\"btn\" href=\"javascript:DoPayMent();\">");
      out.print( total_price );
      out.write("원 결제하기</a>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		</div>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
