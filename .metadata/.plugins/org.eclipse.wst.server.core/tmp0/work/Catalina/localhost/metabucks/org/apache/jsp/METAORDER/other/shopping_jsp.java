/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.78
 * Generated at: 2022-05-26 12:22:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.METAORDER.other;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import meta.dto.*;
import meta.util.*;
import meta.vo.*;

public final class shopping_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("meta.dto");
    _jspx_imports_packages.add("meta.vo");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("meta.util");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");


accountVO user = (accountVO)session.getAttribute("login");

if( user == null )
{
	response.getWriter().print("<script>alert('로그인 후 이용 바랍니다.'); location.href = 'index.jsp';</script>");
	return;
}

      out.write('\r');
      out.write('\n');

int cart_count		= 0; 

if(session.getAttribute("cart_count") != null){
	
	cart_count = (Integer) session.getAttribute("cart_count");	//총액
};
System.out.println(cart_count);

if( cart_count == 0)
{
	response.getWriter().print("<script>alert('장바구니에 담긴 상품이 없습니다.'); location.href = '../order/index.jsp';</script>");
}

if(cart_count > 0 )
{
	for(int i = 0 ; i < cart_count ; i++)
	{
		String sel_option	= (String) session.getAttribute("sel_option"+i);
		String select_item 	= (String) session.getAttribute("select_item"+i);
		String total_price 	= (String) session.getAttribute("total_price"+i);
		
		
		
		System.out.println(cart_count);
		System.out.println(select_item);
		System.out.println(total_price);
		
		String[] option = sel_option.split(",");
		String[] items = select_item.split("@");
		
		String shot		= option[0];
		String syrup	= option[1];
		String count	= option[2];
		String size		= items[0];
		String name		= items[1];
		String price	= items[2];
		String pro_no	= items[3];
		
	}
	
}



      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("	<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"UTF-8\">\r\n");
      out.write("		<title>메타벅스</title>\r\n");
      out.write("		<link type=\"text/css\" rel=\"stylesheet\" href=\"../css/all.css\">\r\n");
      out.write("		<script src=\"../js/jquery-3.6.0.js\" ></script>\r\n");
      out.write("		<script src=\"../../PROTO/js/cart.js\"></script>\r\n");
      out.write("		<script src=\"../js/common.js\"></script>\r\n");
      out.write("	</head>\r\n");
      out.write("	<script>\r\n");
      out.write("		window.onload = function (){\r\n");
      out.write("			setText((\"sum_price\"),\"총 결제금액 : \"+ comma(getIntText(\"sum_price\"))+\" 원\")\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function shoppingdel(){\r\n");
      out.write("			\r\n");
      out.write("			if (confirm(\"장바구니를 비우시겠습니까?\") == true) \r\n");
      out.write("			{\r\n");
      out.write("				 window.open(\"shoppingdel.jsp\");\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//옵션값을 보내기\r\n");
      out.write("		function Option()\r\n");
      out.write("		{\r\n");
      out.write("			var select_item = $(\"#select_item\").val();javascript:void(0);\r\n");
      out.write("			var basic_price = $(\"#basic_price\").val();javascript:void(0);\r\n");
      out.write("			basic_price = parseInt(basic_price);\r\n");
      out.write("			if(basic_price == 0)\r\n");
      out.write("			{\r\n");
      out.write("				alert(\"제품을 선택하여 주세요.\");\r\n");
      out.write("				return;	\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			var datalist = \"\";\r\n");
      out.write("			\r\n");
      out.write("			$(\"#shot\").each(\r\n");
      out.write("				function()\r\n");
      out.write("				{\r\n");
      out.write("					var shot	= document.getElementById(\"shot\").innerHTML;\r\n");
      out.write("					if(datalist != \"\") datalist += \",\";\r\n");
      out.write("					datalist += shot;				\r\n");
      out.write("				}\r\n");
      out.write("			);\r\n");
      out.write("			$(\"#syrup\").each(\r\n");
      out.write("				function()\r\n");
      out.write("				{\r\n");
      out.write("					var syrup	= document.getElementById(\"syrup\").innerHTML;\r\n");
      out.write("					if(datalist != \"\") datalist += \",\";\r\n");
      out.write("					datalist += syrup;				\r\n");
      out.write("				}\r\n");
      out.write("			);\r\n");
      out.write("			$(\"#count\").each(\r\n");
      out.write("				function()\r\n");
      out.write("				{\r\n");
      out.write("					var count	= document.getElementById(\"count\").innerHTML;\r\n");
      out.write("					if(datalist != \"\") datalist += \",\";\r\n");
      out.write("					datalist += count;			\r\n");
      out.write("				}\r\n");
      out.write("			);\r\n");
      out.write("			\r\n");
      out.write("			$(\"#sel_option\").val(datalist);\r\n");
      out.write("			document.option.submit();\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	<body>\r\n");
      out.write("		<table border=\"0\" align=center width=500px>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>\r\n");
      out.write("					<a href=\"index.jsp\"><img src=\"../img/back.png\"></a>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr style=\"height:100px;\">\r\n");
      out.write("				<td colspan=\"4\">\r\n");
      out.write("					<h2>\r\n");
      out.write("						장바구니\r\n");
      out.write("					</h2>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td width=\"125px\">\r\n");
      out.write("					<h3>음료/푸드</h3>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<div id=\"cartbody\">\r\n");
      out.write("			");

			int sum_price = 0;
			if(cart_count > 0 )
			{
				for(int i = 0 ; i < cart_count ; i++)
				{
					String sel_option	= (String) session.getAttribute("sel_option"+i);
					String select_item 	= (String) session.getAttribute("select_item"+i);
					String total_price 	= (String) session.getAttribute("total_price"+i);
					
					String temp_price = total_price.replace(",","");
					sum_price += Integer.parseInt(temp_price);
					
					
					String[] option = sel_option.split(",");
					String[] items = select_item.split("@");
					
					String shot		= option[0];
					String syrup	= option[1];
					String count	= option[2];
					String size		= items[0];
					String name		= items[1];
					String price	= items[2];
					String no	= items[3];
					
					int pro_no = Integer.parseInt(no);
					productsDTO	pdto = new productsDTO();
					productsVO	pro = null;
					pro = pdto.GetItem(pro_no);
					
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td style=\"width:125px; height:80px\">\r\n");
      out.write("						<a href=\"../order/view.jsp\">\r\n");
      out.write("						<img style=\"border-radius:10px; width:auto; height:125px;\"\r\n");
      out.write("							 src=\"../order/download.jsp?file=");
      out.print( pro.images().get(0).img_pname() );
      out.write("&name=");
      out.print( pro.images().get(0).img_lname() );
      out.write("\">\r\n");
      out.write("						</a>		\r\n");
      out.write("							</td>\r\n");
      out.write("							<td colspan=\"3\">\r\n");
      out.write("								<a id=\"cart_name\" href=\"../order/view.jsp\">");
      out.print( name );
      out.write("</a>\r\n");
      out.write("								<div id=\"cart_option\" style=\"font-size:12px\">");
      out.print( size );
      out.write("<div style=\"float:right\">");
      out.print( price );
      out.write("</div></div>\r\n");
      out.write("								<div id=\"cart_op_price\"  style=\"font-size:12px\">시럽추가<div style=\"float:right\">");
      out.print( syrup );
      out.write("회</div></div>\r\n");
      out.write("								<div id=\"cart_op_price\"  style=\"font-size:12px\">샷추가<div style=\"float:right\">");
      out.print( shot );
      out.write("회</div></div>\r\n");
      out.write("								<p><div id=\"cart_count\" ><div id=\"cart_price\" style=\"float:right\">");
      out.print( total_price );
      out.write("</div></div></p>\r\n");
      out.write("							</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");

				}
			}
			
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"4\" style=\"border-top:10px; height:1px;background-color:#A6A6A6\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"3\">\r\n");
      out.write("					<h3><div style=\"float:right\" id=\"sum_price\">");
      out.print( sum_price );
      out.write("</div></h3>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr style=\"position: fixed;\r\n");
      out.write("						background-color: white; /*임의색상*/\r\n");
      out.write("						bottom: 0;\r\n");
      out.write("						height: 6rem;\">\r\n");
      out.write("				<td width=500px align=center>\r\n");
      out.write("					<a class=\"btn re\" href=\"javascript:shoppingdel();\">장바구니 비우기</a><a class=\"btn\" href=\"../order/payment.jsp\">주문하기</a>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
